




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.


#include "TestGame_proxy.h"

namespace TestGame {


        
	bool Proxy::SendItems ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & player_no, const std::vector<Item> & items)	{
		::Proud::CMessage __msg;
__msg.UseInternalBuffer();
__msg.SetSimplePacketMode(m_core->IsSimplePacketMode());

::Proud::RmiID __msgid=(::Proud::RmiID)Rmi_SendItems;
__msg.Write(__msgid); 
	
__msg << player_no;
__msg << items;
		
		return RmiSend(&remote,1,rmiContext,__msg,
			RmiName_SendItems, (::Proud::RmiID)Rmi_SendItems);
	}

	bool Proxy::SendItems ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const int & player_no, const std::vector<Item> & items)  	{
		::Proud::CMessage __msg;
__msg.UseInternalBuffer();
__msg.SetSimplePacketMode(m_core->IsSimplePacketMode());

::Proud::RmiID __msgid=(::Proud::RmiID)Rmi_SendItems;
__msg.Write(__msgid); 
	
__msg << player_no;
__msg << items;
		
		return RmiSend(remotes,remoteCount,rmiContext,__msg,
			RmiName_SendItems, (::Proud::RmiID)Rmi_SendItems);
	}
        
	bool Proxy::SendPlayerInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & player_no, const PlayerInfo & info)	{
		::Proud::CMessage __msg;
__msg.UseInternalBuffer();
__msg.SetSimplePacketMode(m_core->IsSimplePacketMode());

::Proud::RmiID __msgid=(::Proud::RmiID)Rmi_SendPlayerInfo;
__msg.Write(__msgid); 
	
__msg << player_no;
__msg << info;
		
		return RmiSend(&remote,1,rmiContext,__msg,
			RmiName_SendPlayerInfo, (::Proud::RmiID)Rmi_SendPlayerInfo);
	}

	bool Proxy::SendPlayerInfo ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const int & player_no, const PlayerInfo & info)  	{
		::Proud::CMessage __msg;
__msg.UseInternalBuffer();
__msg.SetSimplePacketMode(m_core->IsSimplePacketMode());

::Proud::RmiID __msgid=(::Proud::RmiID)Rmi_SendPlayerInfo;
__msg.Write(__msgid); 
	
__msg << player_no;
__msg << info;
		
		return RmiSend(remotes,remoteCount,rmiContext,__msg,
			RmiName_SendPlayerInfo, (::Proud::RmiID)Rmi_SendPlayerInfo);
	}
        
	bool Proxy::Move ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int8_t & key)	{
		::Proud::CMessage __msg;
__msg.UseInternalBuffer();
__msg.SetSimplePacketMode(m_core->IsSimplePacketMode());

::Proud::RmiID __msgid=(::Proud::RmiID)Rmi_Move;
__msg.Write(__msgid); 
	
__msg << key;
		
		return RmiSend(&remote,1,rmiContext,__msg,
			RmiName_Move, (::Proud::RmiID)Rmi_Move);
	}

	bool Proxy::Move ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const int8_t & key)  	{
		::Proud::CMessage __msg;
__msg.UseInternalBuffer();
__msg.SetSimplePacketMode(m_core->IsSimplePacketMode());

::Proud::RmiID __msgid=(::Proud::RmiID)Rmi_Move;
__msg.Write(__msgid); 
	
__msg << key;
		
		return RmiSend(remotes,remoteCount,rmiContext,__msg,
			RmiName_Move, (::Proud::RmiID)Rmi_Move);
	}
#ifdef USE_RMI_NAME_STRING
const PNTCHAR* Proxy::RmiName_SendItems =_PNT("SendItems");
#else
const PNTCHAR* Proxy::RmiName_SendItems =_PNT("");
#endif
#ifdef USE_RMI_NAME_STRING
const PNTCHAR* Proxy::RmiName_SendPlayerInfo =_PNT("SendPlayerInfo");
#else
const PNTCHAR* Proxy::RmiName_SendPlayerInfo =_PNT("");
#endif
#ifdef USE_RMI_NAME_STRING
const PNTCHAR* Proxy::RmiName_Move =_PNT("Move");
#else
const PNTCHAR* Proxy::RmiName_Move =_PNT("");
#endif
const PNTCHAR* Proxy::RmiName_First = RmiName_SendItems;

}



