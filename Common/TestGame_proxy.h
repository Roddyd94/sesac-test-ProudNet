



  
// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

#pragma once


#include "TestGame_common.h"

namespace TestGame {


	class Proxy : public ::Proud::IRmiProxy
	{
	public:
	virtual bool SendItemSet ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & player_nth, const std::set<Item> & item_set) PN_SEALED; 
	virtual bool SendItemSet ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const int & player_nth, const std::set<Item> & item_set)   PN_SEALED;  
	virtual bool SendPlayer ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & player_nth, const Player & player) PN_SEALED; 
	virtual bool SendPlayer ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const int & player_nth, const Player & player)   PN_SEALED;  
	virtual bool Move ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int8_t & key) PN_SEALED; 
	virtual bool Move ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const int8_t & key)   PN_SEALED;  
	virtual bool WhoAmI ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_SEALED; 
	virtual bool WhoAmI ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext)   PN_SEALED;  
	virtual bool WhoYouAre ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & player_nth) PN_SEALED; 
	virtual bool WhoYouAre ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const int & player_nth)   PN_SEALED;  
static const PNTCHAR* RmiName_SendItemSet;
static const PNTCHAR* RmiName_SendPlayer;
static const PNTCHAR* RmiName_Move;
static const PNTCHAR* RmiName_WhoAmI;
static const PNTCHAR* RmiName_WhoYouAre;
static const PNTCHAR* RmiName_First;
		Proxy()
		{
			if(m_signature != 1)
				::Proud::ShowUserMisuseError(::Proud::ProxyBadSignatureErrorText);
		}

		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; } 
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

}



